STRUCTURE:
1) Questions
2) 2 petits exercices d'algorithm
3) Exercice react

Intro: Je ne m'attends pas a ce que tu connaisses les reponses a toutes ces questions, c'est normal si tu ne peux pas repondre, c'est just une maniere d'evaluer tes connaissances, just fais de ton mieux.
Si tu n'es pas selectionne apres cette interview je pense que ca restera une interview qui t'auras appris, je ferais un feedback pour chacune de tes reponses et peut-etre que ces questions peuvent t'aider a identifier des trous dans tes connaissances.
Moi-meme je ne suis pas un expert, je suis stagiaire ici depuis une semaine et j'ai revise, j'ai revu certaines des notions sur lesquels je t'interroge aujourd'hui, je peux faire des erreurs, dire des betises, donc n'hesite pas a me corriger ou a debattre.

Instruction:
- Utilise l'editeur de texte de ton choix, mais pas de cursor ou autres ia
- Tu as le droit de faire des recherches sur internet mais pas d'ia

# Questions

## Requests
	How to differentiate POST, PUT, PATCH request methods?
	What is CORS policy?
	If your client needs to fetch data from the server, and you know you need to send data in the body of the request, what method do you use?

## Backend/ Architecture
	Do you know protocols other than http, have you used any? GraphQL, Websockets, Server-Sent Events?
	What is the difference between relational databases and non relational databases? (ACID)
	If your backend server is overloaded what are some scaling options?
	If your database server is overloaded what are some scaling options?

## UI, UX
	How do you find ideas to design the frontend? benchmarks? -> how important is frontend design for the climate-solutions app?
	On group projects have you made design initiatives or were decisions made top down? For personal projects what is the approach?
	What is your experience with Figma?

## Maintainability of code:
	What is the biggest project you have worked with, can you make an overview of the different parts of the project? (make rough estimation of size make sure they have experience with big projects not just small stuff)
	What is your conception of clean code?
	When do you decide to refactor your code?
	Can you name an instance where you needed to optimize your program for efficiency?

## Code
	What is a pointer?
	Rank these in terms of efficiency, create 3 groups: C, C#, Golang, Python, Rust, JavaScript, Java?
		Follow up questions: Do you know what a garbage collector(ramasse miettes) is?
	How does executing multiple asynchronous tasks in a single thread improve a program’s efficiency, particularly for I/O-bound tasks? "Comment l'exécution de plusieurs tâches asynchrones dans un seul fil d'exécution améliore-t-il l'efficacité d'un programme, notamment pour les tâches liées aux entrées/sorties" (astuce: pourquoi est-ce que la fonction fetch() en JavaScript est asynchrone)

## WebDev
	What is your view on Vanilla CSS vs Tailwind CSS?
	Have you used TypeScript?
	Can you explain the different browser storage options like Cookies, Local Storage, Session Storage, Indexed Db

ASK: What do you think of the questions?

break

# 2 small algorithm exercise

break

# React exercise OR Make a proposition
build react project
Create login page
send http request to localhost:8080 in json format with username and password
Center navigation bar and make "login" to "account" switch

If the login succeeded what would be the response format, design it and how would the session token be stored? (answer without programming it)
